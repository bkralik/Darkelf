// JavaScript Document// DEScripts// General functions/***** REGULAR EXPRESSIONS *****/var RegularExpressions = new function() {	// non-negative integer	this.integer = /^\d+$/;	// non-negative floating-point number	this.float = /^\d+(\d*|\.\d+)$/;};/***** EXCEPTION HANDLING *****/// Exception "class"function Exception(type, message, cause) {	this.type = type;	this.message = message;	this.cause = cause;}/***** EXTENDING HTML ELEMENTS *****/// Defines indexOf if it is not definedif (Array.prototype.indexOf === undefined || Array.prototype.indexOf() === null) {	Array.prototype.indexOf = function(arg) {		for(var i=0; i < this.length; i++) {			if(this[i] === arg)				return i;		}		return -1;	};}// Tests whether a HTML element has CSS classHTMLElement.prototype.hasClass = function(class_name) {	var classes = this.className.split(" ");	var index = classes.indexOf(class_name);	if(index !== -1)		return true;	return false;};// Adding CSS class in HTML elementHTMLElement.prototype.addClass = function(class_name) {	var classes = this.className.split(" ");	var index = classes.indexOf(class_name);	if(index === -1)		classes.push(class_name);	this.className = classes.join(" ");};// Removing CSS class in HTML elementHTMLElement.prototype.removeClass = function(class_name) {	var classes = this.className.split(" ");	var index = classes.indexOf(class_name);	if(index !== -1)		classes.splice(index,1);	this.className = classes.join(" ");};// Getting inputs in a HTML form elementHTMLFormElement.prototype.getInputElements = function() {	var inputs = new Array(); 	for(var i in this.elements)		if(this.elements[i].type === "text")			inputs.push(this.elements[i]);	return inputs;};// Clear error CSS class for all input elements in a HTML form elementHTMLFormElement.prototype.clearErrors = function() {	removeClassFromElements(this.getInputElements(), "error");};// Getting non-negative integer from HTML input elementHTMLInputElement.prototype.getInt = function(default_value) {	if(RegularExpressions.integer.test(this.value))		return parseInt(this.value);	if(this.value === "" && default_value !== undefined) {		if(RegularExpressions.integer.test(default_value)) {			this.value = default_value;			return parseInt(default_value);		}		throw new Exception("ScriptException","Skript používá neplatnou defaultní hodnotu.",this);	}	throw new Exception("IllegalArgument","Hodnota není nezáporné celé číslo.",this);};// Getting non-negative floating point number from HTML input elementHTMLInputElement.prototype.getFloat = function(default_value) {	if(RegularExpressions.float.test(this.value))		return parseFloat(this.value);	if(this.value === "" && default_value !== undefined) {		if(RegularExpressions.float.test(default_value)) {			this.value = default_value;			return parseFloat(default_value);		}		throw new Exception("ScriptException","Skript používá neplatnou defaultní hodnotu.",this);	}	throw new Exception("IllegalArgument","Hodnota není nezáporné číslo.",this);};// Get value of a selected index in HTML select elementHTMLSelectElement.prototype.getSelectedValue = function() {	return this[this.selectedIndex].value;};/***** HELPER FUNCTIONS *****/// Remove a class from all elements in an arrayfunction removeClassFromElements(array, class_name) {	for(var i in array)		array[i].removeClass(class_name);}function registerOnLoadFunction(func) {	var oldOnLoad = window.onload;	if(typeof window.onload !== "function") {		window.onload = function() {			func();		};	} else {		window.onload = function() {			oldOnLoad();			func();		};	}}